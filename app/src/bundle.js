(()=>{var o={54:(o,e,t)=>{const{log:n,getConfig:r,getTargets:i,getOwnPropertyDescriptor:s,checkRegexs:c,execCode:g}=t(191);o.exports=(o,e,t)=>{const a=r(o,e,t),l=t.split(":");t=l.pop();const[f,u]=i(t.split("."));if(!f||!(u in f))return void console.log(`[DOMLogger++] ${t} (attribute) does not exist!`);try{if("function"==typeof f[u])return void console.log(`[DOMLogger++] ${t} can't be a function or a class!`)}catch{}const d=s(f,u);if(d.configurable){var p;if(!d.set||!d.get)try{p=f[u]}catch{if(d.set||!d.get)return void console.log(`[DOMLogger++] ${t} can't be hook for now!`);if(l.includes("set"))return void console.log(`[DOMLogger++] Only the getter can be hooked for ${t}, remove set!`)}Object.defineProperty(f,u,{get:function(){return d.get?output=d.get.call(this):output=p,l.includes("get")&&(output=g(a.hookFunction,output),n(o,e,`${this.nodeName?`get:${this.nodeName.toLowerCase()}.${u}`:t}`,output,a)),output},set:function(r){if(l.includes("set")&&r){const i=c(a.match,r,!0),s=c(a["!match"],r,!1);r=g(a.hookFunction,r),!s&&i&&n(o,e,`${this.nodeName?`set:${this.nodeName.toLowerCase()}.${u}`:t}`,r,a)}return d.set?d.set.call(this,r):void(p=r)}})}else console.log(`[DOMLogger++] ${t} is not configurable, can't hook it!`)}},825:(o,e,t)=>{const{log:n,getConfig:r,getTargets:i,checkRegexs:s,execCode:c}=t(191);o.exports=(o,e,t)=>{const g=r(o,e,t),[a,l]=i(t.split("."));var f=a[l];const u=s(g.match,f,!1),d=s(g["!match"],f,!1);u&&!d&&(f=c(g.hookFunction,f),n(o,e,t,f,g))}},746:(o,e,t)=>{const{log:n,getConfig:r,getTargets:i,getOwnPropertyDescriptor:s,checkRegexs:c,execCode:g}=t(191);o.exports=(o,e,t)=>{const a=r(o,e,t);var[l,f]=i(t.split("."));l&&f in l?"function"==typeof l[f]?s(l,f).configurable?l[f]=new Proxy(l[f],{construct:function(r,i){const s=c(a.match,i,!0),l=c(a["!match"],i,!1);return i=g(a.hookFunction,i),!l&&s&&n(o,e,t,i,a),new r(...i)}}):console.log(`[DOMLogger++] ${t} is not configurable, can't hook it!`):console.log(`[DOMLogger++] ${t} is not a class!`):console.log(`[DOMLogger++] ${t} (class) does not exist!`)}},3:(o,e,t)=>{const{log:n,getConfig:r,getTargets:i}=t(191),s={function:t(4),class:t(746),attribute:t(54)};o.exports=(o,e,t)=>{const c=t.split(":"),g=3===c.length?c.pop():50,a=r(o,e,c.slice(1).join(":")),l=c.slice(1).pop(),f=setInterval((()=>{var[t,r]=i(l.split("."));t&&r in t&&(clearInterval(f),"attribute"!==c[0]||"set"!==c[1]&&"set"!==c[2]||n(o,e,c.slice(1).join(":"),t[r],a),s[c[0]](o,e,c.slice(1).join(":")))}),g)}},454:(o,e,t)=>{const n=t(54),{log:r,getConfig:i,stringify:s,checkRegexs:c,execCode:g}=t(191);o.exports=(o,e,t)=>{const a=EventTarget.prototype.addEventListener;EventTarget.prototype.addEventListener=function(n,l,f){if(t.includes(n)){const t=i(o,e,n),a=c(t.match,`${l}${f?`;options=${s(f)}`:""}`,!0),u=c(t["!match"],`${l}${f?`;options=${s(f)}`:""}`,!1);args=g(t.hookFunction,l),!u&&a&&r(o,e,`on${n}`,`${l}${f?`;options=${s(f)}`:""}`,t)}return a.call(this,n,l,f)};for(const r of t)`on${r}`in window?n(o,e,`set:on${r}`):console.log(`[DOMLogger++] on${r} (event) does not exist!`)}},4:(o,e,t)=>{const{log:n,getConfig:r,getTargets:i,getOwnPropertyDescriptor:s,checkRegexs:c,execCode:g}=t(191);o.exports=(o,e,t)=>{const a=r(o,e,t);var[l,f]=i(t.split("."));if(!l||!(f in l))return void console.log(`[DOMLogger++] ${t} (function) does not exist!`);if("function"!=typeof l[f])return void console.log(`[DOMLogger++] ${t} is not a function!`);if(!s(l,f).configurable)return void console.log(`[DOMLogger++] ${t} is not configurable, can't hook it!`);const u=l[f];l[f]=new Proxy(l[f],{apply:function(r,i,s){const l=c(a.match,s,!0),f=c(a["!match"],s,!1);return s=g(a.hookFunction,s),!f&&l&&n(o,e,t,s,a),Reflect.apply(u,i,s)}})}},191:o=>{const e=o=>(void 0===o?o="undefined":"function"==typeof o?o=o.toString():"string"!=typeof o&&(o=JSON.stringify(o)),o),t=(o,t,n)=>{if(!o)return n;t=e(t);for(let e of o){"exec"===e.split(":")[0]&&(e=r(e,t));try{new RegExp(e)}catch{console.log(`[DOMLogger++] ${e} (regex) is invalid!`);continue}if(t.match(e))return!0}return!1},n=o=>{if(o&&o.requiredHooks)for(const e of o.requiredHooks)if(!window.hookTypeHistory.includes(e))return!1;return!0},r=(o,t="")=>{if(!o)return t;var n=t;try{n=Function("args",o)(t)}catch{console.log(`[DOMLogger++] ${e(o)} is an invalid code to evaluate!`)}return n};o.exports={log:async(o,r,i,s,c)=>{var g=(()=>{let o=(new Error).stack;return o=o.split("\n"),o.filter((o=>!o.includes("/src/bundle.js")))})();"Error"===g[0]&&g.shift();var a=g[0];if(a=await(async o=>{const e=(new TextEncoder).encode(o),t=await crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(t)).map((o=>o.toString(16).padStart(2,"0"))).join("")})(a),window?.domlogger_debug_canary===a)debugger;var l=!1,f=!1;if(c.alert){const o=t(c.alert.match,s,!0);!t(c.alert["!match"],s,!1)&&o&&(l=!0,c.alert.notification&&(f=!0))}let u={ext:"domlogger++",date:Date.now(),href:location.href,type:r,hook:o,frame:top===self?"top":"subframe",sink:i,data:e(s),trace:g,debug:a,badge:l,notification:f};window.hookTypeHistory.includes(r)||window.hookTypeHistory.push(r),n(c)&&(window.originalPostMessage?window.originalPostMessage(u,"*"):window.postMessage(u,"*"))},getConfig:(o,e,t)=>{var n=window.hooksConfig["*"]?window.hooksConfig["*"]:{},r=window.hooksConfig[o]?window.hooksConfig[o]:{},i=window.hooksConfig[e]?window.hooksConfig[e]:{},s=window.hooksConfig[t]?window.hooksConfig[t]:{};return Object.assign({},n,s,r,i)},getTargets:o=>{var e=o.pop(),t=window;"window"===o[0]&&o.shift();for(const e of o){if(!(e in t))return[null,null];t=t[e]}return[t,e]},getOwnPropertyDescriptor:(o,e)=>{for(;o;){const t=Object.getOwnPropertyDescriptor(o,e);if(t)return t;o=Object.getPrototypeOf(o)}},stringify:e,checkRegexs:t,execCode:r}}},e={};function t(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={exports:{}};return o[n](i,i.exports,t),i.exports}(()=>{const o={function:t(4),class:t(746),attribute:t(54),event:t(454),checkContent:t(825),custom:t(3)},e=new URL(document.currentScript.src),n=new URLSearchParams(e.search),r=JSON.parse(atob(n.get("hookSettings")));window.hooksTargets=r.hooks,window.hooksConfig=r.config,window.hookTypeHistory=[],window.domlogger_debug_canary=n.get("debugCanary");for(const[e,t]of Object.entries(window.hooksTargets))for(const[n,r]of Object.entries(t))if("event"!==n)for(const t of r)"postMessage"===t.split(".").pop()&&(window.originalPostMessage=window.postMessage),o[n](n,e,t);else o[n](n,e,r)})()})();